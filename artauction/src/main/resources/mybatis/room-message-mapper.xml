<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="roomMessage">

	<select id="sequence" resultType="int">
		select room_message_seq.nextval
		from dual
	</select>
	<insert id="add">
		insert into room_message(
		room_message_no, room_message_type,room_message_sender,
		room_message_receiver,room_message_content,room_message_time,
		room_no
		)
		values(
		#{roomMessageNo}, #{roomMessageType},#{roomMessageSender},
		<!-- null이 들어갈 수 있도록 형태를 명시 -->
		#{roomMessageReceiver, jdbcType=VARCHAR}, #{roomMessageContent},
		#{roomMessageTime}, #{roomNo}
		)
	</insert>

	<!-- react에 보내기 쉽게 조회 -->
	<select id="listMemberComplete" resultType="WebsocketMessageVO">
		<include refid="top-n-header"></include>
		select
		RM.room_message_no "no",
		RM.room_message_type "type",
		RM.room_message_sender "sender_member_id",
		M.member_level "sender_member_level",
		RM.room_message_receiver "receiver_member_id",
		RM.room_message_content "content",
		RM.room_message_time "time"
		from
		room_message RM
		left outer join member M
		on RM.room_message_sender = M.member_id
		<!-- 방번호 + 일반채팅(chat) + 시스템메세지(system) + 나의DM만 조회 -->
		where
		<!-- 방 번호에 대한 조건 -->
		room_no = #{roomNo}
		and
		<!-- 조회할 채팅에 대한 조건 -->
		(
		RM.room_message_type = 'chat'
		or
		RM.room_message_type = 'system'
		<!-- DM은 회원만(memberId !=null) 조회 -->
		<if test="memberId != null">
			or
			(
			RM.room_message_type = 'dm'
			and
			(
			RM.room_message_sender = #{memberId}
			or
			RM.room_message_receiver = #{memberId}
			)
			)
		</if>
		)
		<!-- 더보기를 위한 조건 추가 - firstMessageNo가 있으면 -->
		<if test="firstMessageNo != null">
			<![CDATA[
			and RM.room_message_no < #{firstMessageNo}
			]]>
		</if>
		order by RM.room_message_no desc
		<include refid="top-n-footer"></include>

		<!-- top n query로 만들어진 최종 결과를 다시 정렬(테이블 별칭 사용 불가) -->
		order by "no" asc
	</select>

	<select id="selectByRoomNo" resultType="RoomMessageVO">
		SELECT room_message_sender AS sender,
		room_message_content AS content,
		room_message_time AS time
		FROM room_message
		WHERE room_no = #{roomNo}
		ORDER BY room_message_time ASC
	</select>


	<sql id="top-n-header">
		<if test="beginRow != null and endRow != null">
			select * from (
			select rownum rn, TMP.* from(
		</if>
	</sql>
	<sql id="top-n-footer">
		<if test="beginRow != null and endRow != null">
			)TMP
			)
			where rn between #{beginRow} and #{endRow}
		</if>
	</sql>

</mapper>